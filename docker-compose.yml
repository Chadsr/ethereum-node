version: '3'

services:

    geth:
        build:
            context: ./go-ethereum
            dockerfile: Dockerfile
        image: geth
        container_name: geth
        restart: always
        ports:
            - 8545:8545 # HTTP RPC
            - 8546:8546 # Websocket RPC
            - 8547:8547 # GraphQL
            - 30303:30303 # UPnP
        env_file:
            - .config.env
        command: "--rpc --rpcaddr 0.0.0.0 \
        --datadir /data \
        --keystore /keystore \
        --cache ${GETH_CACHE_MB} \
        --cache.database ${GETH_CACHE_PERCENT_DB}
        --cache.trie ${GETH_CACHE_PERCENT_TRIE} \
        --cache.gc ${GETH_CACHE_PERCENT_GC} \
        --gcmode ${GETH_GC_MODE} \
        --metrics \
        --metrics.influxdb.endpoint http://influxdb:8086 \
        --metrics.influxdb.username ${INFLUXDB_USERNAME} \
        --metrics.influxdb.password ${INFLUXDB_PASSWORD} \
        --metrics.influxdb.database ${INFLUXDB_DB} \
        --metrics.influxdb.tags type=geth \
        --verbosity ${LOG_VERBOSITY_LEVEL} \
        --ipcpath /ipc/geth.ipc \
        --nousb"
        volumes:
            - ${KEYSTORE_DIR}:/keystore
            - ${GETH_DATA_DIR}:/data
            - ${GETH_IPC_DIR}:/ipc
        networks:
            - default

    swarm:
        build:
            context: ./swarm
            dockerfile: Dockerfile
        image: swarm
        container_name: swarm
        restart: always
        ports:
            - 8548:8546 # Websocket RPC
            - 8500:8500 # HTTP
            - 30399:30399 # UPnP
        env_file:
            - .config.env
        command: "--datadir /data \
        --keystore /keystore \
        --ens-api /ipc/geth.ipc \
        --store.path /data \
        --store.size ${SWARM_STORE_SIZE} \
        --store.cache.size ${SWARM_STORE_CACHE_SIZE} \
        --metrics \
        --metrics.influxdb.endpoint http://influxdb:8086 \
        --metrics.influxdb.username ${INFLUXDB_USERNAME} \
        --metrics.influxdb.password ${INFLUXDB_PASSWORD} \
        --metrics.influxdb.database ${INFLUXDB_DB} \
        --metrics.influxdb.tags type=swarm \
        --verbosity ${LOG_VERBOSITY_LEVEL} \
        --bzzaccount ${ETH_ACCOUNT} \
        --password /password/${ACCOUNT_PASSWORD_FILE_NAME}"
        volumes:
            - ${ACCOUNT_PASSWORD_DIR}:/password
            - ${KEYSTORE_DIR}:/keystore
            - ${SWARM_DATA_DIR}:/data
            - ${GETH_IPC_DIR}:/ipc
        networks:
            - default

    influxdb:
        image: influxdb:latest
        container_name: influxdb
        restart: always
        ports:
            - "8086:8086" # HTTP API
        env_file: 
            - 'env.influxdb'
        environment: 
            - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
            - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
            - INFLUXDB_DB=${INFLUXDB_DB}
        networks:
            - default
        volumes:
            - influx-data:/var/lib/influxdb

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        restart: always
        ports:
            - "3000:3000" # HTTP
        env_file:
            - 'env.grafana'
            - '.config.env'
        user: "472"
        links:
            - influxdb
        volumes:
            - grafana-data:/var/lib/grafana
            - ./grafana-provisioning:/etc/grafana/provisioning

volumes:
    influx-data:
    grafana-data:

networks:
    default:
        driver: bridge
